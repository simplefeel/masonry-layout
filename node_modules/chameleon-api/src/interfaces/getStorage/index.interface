<script cml-type="interface">
type obj = {
  errno: Number,
  errMsg: String,
  data: String
}
type getCallback = (value: obj) => void

interface UtilsInterface {
  getStorage(key: String, cb: getCallback): void;
}

</script>

<script cml-type="web">
  class Method implements UtilsInterface {
    getStorage(key, cb) {
      try {
        let data = localStorage.getItem(key);
        cb({
          errno: 0,
          errMsg: 'success',
          data: data !== null ? data : ''
        });
      } catch (e) {
        let errMsg;
        if (typeof e !== 'string') {
          errMsg = JSON.stringify(e);
        } else {
          errMsg = e;
        }
        cb({
          errno: -1,
          errMsg,
          data: ''
        });
      }
    }
  }
  export default new Method();
</script>

<script cml-type="weex">
import cmlBridge from '../../lib/sdk/cmlBridge';
import { inSDK } from '../../lib/sdk/env';

class Method implements UtilsInterface {
  getStorage(key, cb) {
    if(inSDK()) {
      cmlBridge.getStorage({key}, res=>{
        let { errno, msg = '', data } = res;
        if(data && typeof data == 'object') {
          data = JSON.stringify(data);
        }
        cb({
          errno: +errno || 0,
          errMsg: msg,
          data
        });
      });
    }else {
      const storage = weex.requireModule('storage');
      storage.getItem(key, function (e) {
        if (e.result === 'success') {
          cb({
            errno: 0,
            errMsg: '',
            data: e.data
          });
        } else {
          cb({
            errno: -1,
            errMsg: '获取失败或未存储',
            data: ''
          });
        }
      });
    }
  }
}
export default new Method();
</script>

<script cml-type="wx">
  class Method implements UtilsInterface {
    getStorage(key, cb) {
      try {
        let data = wx.getStorageSync(key);
        if (data && typeof data !== 'string') {
          data = JSON.stringify(value);
        }
        cb({
          errno: 0,
          errMsg: 'success',
          data: data !== null ? data : ''
        });
      } catch (e) {
        let errMsg;
        if (typeof e !== 'string') {
          errMsg = JSON.stringify(e);
        } else {
          errMsg = e;
        }
        cb({
          errno: -1,
          errMsg,
          data: ''
        });
      }
    }
  }
  export default new Method();
</script>

<script cml-type="baidu">
  class Method implements UtilsInterface {
    getStorage(key, cb) {
      try {
        let data = swan.getStorageSync(key);
        if (typeof data !== 'string') {
          data = JSON.stringify(value);
        }
        cb({
          errno: 0,
          errMsg: 'success',
          data: data !== null ? data : ''
        });
      } catch (e) {
        let errMsg;
        if (typeof e !== 'string') {
          errMsg = JSON.stringify(e);
        } else {
          errMsg = e;
        }
        cb({
          errno: -1,
          errMsg,
          data: ''
        });
      }
    }
  }
  export default new Method();
</script>


<script cml-type="alipay">
  class Method implements UtilsInterface {
    getStorage(key, cb) {
      try {
        let data = my.getStorageSync({ key });
        if(data && data.success || data.APDataStorage){
          cb({
            errno: 0,
            errMsg: 'success',
            data: data.data || data.APDataStorage || ''
          });
        } else {
          cb({
            errno: 0,
            errMsg: 'success',
            data: ''
          });
        }
      } catch (e) {
        let errMsg;
        if (typeof e !== 'string') {
          errMsg = JSON.stringify(e);
        } else {
          errMsg = e;
        }
        cb({
          errno: -1,
          errMsg,
          data: ''
        });
      }
    }
  }
  export default new Method();
</script>
